# ワークフローの名前（GitHub上で表示される名前）
name: ブログをXserverにデプロイ

# いつ実行するか（mainブランチにプッシュされたとき）
on:
  push:
    branches: [ main ]
  # 手動実行も可能にする
  workflow_dispatch:

# 実行する処理
jobs:
  deploy:
    # Ubuntu環境で実行
    runs-on: ubuntu-latest
    
    steps:
    # ステップ1: ソースコードをダウンロード
    - name: リポジトリのコードを取得
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # 最小限の履歴で高速化
    
    # ステップ2: Xserverにファイルをアップロード（ビルド済みpublicフォルダ）
    - name: Xserverにデプロイ
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./public/          # ローカルでビルド済みのpublicフォルダ
        server-dir: /4thavenue.info/public_html/344blog/    # Xserverのアップロード先
        # 最適化オプション
        log-level: minimal
        dry-run: false
        # 差分アップロードの最適化
        dangerous-clean-slate: false   # 差分アップロードで高速化
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .htaccess
          cgi-bin/
          **/*柔軟剤*  # 柔軟剤関連のファイルをすべて除外